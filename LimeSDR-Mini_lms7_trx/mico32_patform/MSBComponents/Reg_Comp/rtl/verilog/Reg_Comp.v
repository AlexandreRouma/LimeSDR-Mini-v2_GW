//	==================================================================
//	>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
//	------------------------------------------------------------------
//	Copyright (c) 2006 by Lattice Semiconductor Corporation
//	------------------------------------------------------------------
//
//	IMPORTANT: THIS FILE IS AUTO-GENERATED BY THE LatticeMico System.
//
//	Permission:
//
//	Lattice Semiconductor grants permission to use this code for use
//	in synthesis for any Lattice programmable logic product.  Other
//	use of this code, including the selling or duplication of any
//	portion is strictly prohibited.
//
//	Disclaimer:
//
//	Lattice Semiconductor provides no warranty regarding the use or
//	functionality of this code. It is the user's responsibility to
//	verify their design for consistency and functionality through
//	the use of formal verification methods.
//
//	--------------------------------------------------------------------
//
//	Lattice Semiconductor Corporation
//	5555 NE Moore Court
//	Hillsboro, OR 97214
//	U.S.A
//
//	TEL: 1-800-Lattice (USA and Canada)
//	408-826-6000 (other locations)
//
//	web: http://www.latticesemi.com/
//	email: techsupport@latticesemi.com
//
//	--------------------------------------------------------------------
//
//	         Custom Component:       Reg_Comp
//	         File:                   Reg_Comp.v
//	         Date:                   Sk, 5 Grd 2021 20:40:12 GMT
//	         Version:                2.1
//
//	=======================================================================

`include "system_conf.v"
module Reg_Comp #(
    parameter reg_08_int_val = 305441741,
    parameter CLK_MHZ = 100)
    (

          // wishbone slave signals
          input[31:0] wb_ADR_I,
          input[31:0] wb_DAT_I,
          input wb_WE_I,
          input[3:0] wb_SEL_I,
          input wb_STB_I,
          input wb_CYC_I,
          input wb_LOCK_I,
          input[2:0] wb_CTI_I,
          input[1:0] wb_BTE_I,
          output[31:0] wb_DAT_O,
          output wb_ACK_O,
          output wb_ERR_O,
          output wb_RTY_O,

          // external signals
          output [7:0] out_pins,

          input CLK_I,
          input RST_I,
          output INTR_O  );


          // Instantiate user's custom module
          wb_reg_dev #( 
              .reg_08_int_val (reg_08_int_val),
              .CLK_MHZ (CLK_MHZ) )
          instantiate_wb_reg_dev (

                // Connect Wishbone slave
               .wb_adr(wb_ADR_I),
               .wb_master_data(wb_DAT_I),
               .wb_we(wb_WE_I),
               .wb_sel(wb_SEL_I),
               .wb_stb(wb_STB_I),
               .wb_cyc(wb_CYC_I),
               .wb_slave_data(wb_DAT_O),
               .wb_ack(wb_ACK_O),
               .wb_err(wb_ERR_O),
               .wb_rty(wb_RTY_O),

                // Connect External signals
               .out_pins(out_pins),

               .wb_clk(CLK_I),
               .wb_reset(RST_I),
               .wb_intr(INTR_O) );

endmodule
